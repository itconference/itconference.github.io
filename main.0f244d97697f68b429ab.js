!function(e){var n={};function r(o){if(n[o])return n[o].exports;var t=n[o]={i:o,l:!1,exports:{}};return e[o].call(t.exports,t,t.exports,r),t.l=!0,t.exports}r.m=e,r.c=n,r.d=function(e,n,o){r.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:o})},r.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},r.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return r.d(n,"a",n),n},r.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},r.p="/",r(r.s=0)}([function(e,n){e.exports="var _require = require('fs'),\n    readFileSync = _require.readFileSync;\n\nvar _require2 = require('path'),\n    resolve = _require2.resolve;\n\nvar _require3 = require('js-yaml'),\n    load = _require3.load;\n\nvar _require4 = require('countries-list'),\n    countries = _require4.countries;\n\nvar Table = require('table-builder');\n\nvar encoding = 'utf-8';\nvar conferencesYaml = resolve(__dirname, '../conferences.yaml');\n\nvar _load = load(readFileSync(conferencesYaml, { encoding: encoding })),\n    conferences = _load.conferences;\n\nvar someConferences = conferences.filter(function (_ref) {\n  var tags = _ref.tags;\n  return tags.includes('Full-stack');\n}).filter(function (_ref2) {\n  var scheduled = _ref2.scheduled;\n  return !!scheduled;\n}).map(function (_ref3) {\n  var name = _ref3.name,\n      rating = _ref3.rating,\n      tags = _ref3.tags,\n      city = _ref3.city,\n      country = _ref3.country;\n  return {\n    name: name,\n    rating: rating,\n    topic: tags[0],\n    location: '<img src=\"https://cdnjs.cloudflare.com/ajax/libs/flag-icon-css/3.1.0/flags/1x1/' + country.toLowerCase() + '.svg\" width=\"13px\" /> ' + city + ', ' + countries[country].name\n  };\n});\n\nvar enoughConferencesForListings = someConferences.length >= 10;\nif (!enoughConferencesForListings) {\n  throw 'Cannot create dev.to and github.com listings. Not enough scheduled conferences. ' + someConferences.length + '/10';\n}\n\nconsole.log(new Table().setHeaders({ rating: 'Rating', topic: 'Topic', name: 'Name', location: 'Location' }).setData(someConferences).render());"}]);